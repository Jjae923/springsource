<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.BoardMapper">
	<!-- 글 목록 보기 -->
	<select id="list" resultType="com.spring.domain.BoardVO">
		<!-- select * from spring_board order by bno desc -->
		<!-- html에서 <>는 태그를 여닫는 의미로 쓰이기 때문에 부등호로 쓸 경우 에러남 <![CDATA[ ]]>로 방지하기-->
		<![CDATA[		 
		select * 
		from (select /*+ INDEX_DESC(spring_board pk_spring_board) */
		      rownum rn, bno, title, writer, regdate, updatedate 
		      from spring_board
		      where 
		]]>      
		<include refid="criteria"></include>
		<![CDATA[      
		      bno>0 and rownum <= (#{pageNum}*#{amount}))
		where rn>(#{pageNum}-1)*#{amount}
		]]>
	</select>
	<select id="total" resultType="int">
		select count(*) from spring_board where
		<include refid="criteria"></include>
		bno>0
	</select>
	
	<!-- 글 작성하기 -->
	<insert id="insert">
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			<!-- 주로 PK 값을 미리 SQL을 통해서 처리해두고 특정한 이름으로 보관 / bno는 vo에 들어있음 -->
			select seq_board.nextval from dual
		</selectKey>
		insert into spring_board(bno, title, content, writer) values(#{bno}, #{title}, #{content}, #{writer}) <!-- getBno()로 가져오는 것 -->
	</insert>
	
	<!-- bno(PK)에 해당하는 게시글 가져오기 -->
	<select id="read" resultType="com.spring.domain.BoardVO">
		select * from spring_board where bno=#{bno}
	</select>
	
	<!-- 게시글 수정하기 -->
	<update id="modify">
		update spring_board set title=#{title}, content=#{content} where bno=#{bno}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete">
		delete from spring_board where bno=#{bno}
	</delete>
	
	<!-- 동적 SQL 작성 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR" >
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type=='T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type=='C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type=='W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
</mapper>
